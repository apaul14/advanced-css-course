/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* simple reset using universal selector. default padding/margin for cross browser functionality. */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* change box model so border and padding not added to total width/height */
}

body {
  /* any rules related to font put in body rule. properties related to font are inherited, body is parent */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7; /*1.7 times bigger than predefined line height*/
  color: #777;
  padding: 30px; /* white padding around the whole body */
}

.header {
  height: 95vh; /* at every point, height of header is 95% of viewport height*/
  background-image: linear-gradient(
    to right bottom, /*direction of gradient*/
    #7ed56f,
    rgba(40, 180, 131, 0.8)),
  url(../img/hero.jpg); /*img under gradient*/
  background-size: cover; /* img will try to fit width of element/viewport */
  background-position: top; /*ensure top of image stays at top of container/viewport (bottom will be cropped)*/
  position: relative;

  clip-path: polygon(0 0,100% 0,100% 75vh, 0 100%); /*path of img still visible. top left, top right, bottom right, bottom left. clippy clip path maker. */
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px; /* these measurements start from parent container (header). parent must be set to relative position*/
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%; /* in relation to parent element */
  left: 50%;
  transform: translate(-50%, -50%); /* in relation to element itself. shifts 50% of length of elements height and width */
  text-align: center; /* for the button */
}

.heading-primary {
  color:#ffffff;
  text-transform: uppercase;

  backface-visibility: hidden; /* determines if back part of element is visible. fixes shaking animations */
  margin-bottom: 60px;
}

.heading-primary-main {
  display: block; /* occupy entire available width, create line breaks before and after */
  font-size: 60px;
  font-weight: 400px;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out; /*how a css animation should progress over the duration of each cycle */
  /* animation-iteration-count: 3; */
  /* animation-delay: 3s; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700px;
  letter-spacing: 17.4px;

  animation: moveInRight 1s ease-out /* shorthand */
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px); /* default behavior is left to right. -100px moves right to left  */
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px); /* default behavior is left to right. -100px moves right to left  */
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px); 
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}
  /* pseudo class. special state of selector.  */
.btn:link,
.btn:visited /* visited state */ {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;  /* transition must be on initial state of button/item */
  position:relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0,0,0, .2); /* adds box shadow */
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0,0,0, .2); /* smaller shadow, less blur after clicking button */
}

.btn-white {
  background-color: #fff;
  color:#777;

}

/* button that looks exactly like button, but behind it */
.btn::after {
  content: "";
  display:inline-block;
  height: 100%;
  width: 100%; /* pseudo elem treated like child of btn, so 100% of btn height/width */
  position: absolute;
  border-radius: 100px;
  top: 0;
  left: 0;
  z-index: -1; /* position of elements if they are overlapping/on top of each other */
  transition: all .4s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation-name: moveInBottom;
  animation-duration: 0.5s;
  animation-timing-function: ease-out;
  animation-delay: .75s;
  animation-fill-mode: backwards; /* automatically apply syles of 0% animation rules (on moveinBottom) before animation starts */
}